# Generated by Django 5.0 on 2025-04-25 05:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('email', models.EmailField(max_length=254, verbose_name='邮箱')),
                ('message', models.TextField(verbose_name='消息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '招商合作',
                'verbose_name_plural': '招商合作',
            },
        ),
        migrations.CreateModel(
            name='JobPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='职位名称')),
                ('description', models.TextField(verbose_name='职位描述')),
                ('requirements', models.TextField(verbose_name='职位要求')),
                ('location', models.CharField(max_length=100, verbose_name='工作地点')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '职位发布',
                'verbose_name_plural': '职位发布',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='促销名称')),
                ('discount_type', models.CharField(choices=[('percent', '百分比'), ('fixed', '固定金额')], default='percent', max_length=10, verbose_name='折扣类型')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='折扣值')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('end_time', models.DateTimeField(verbose_name='结束时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否生效')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '促销活动',
                'verbose_name_plural': '促销活动',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='邮箱')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='手机号')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='是否是超级用户')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminLogEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', '创建'), ('update', '修改'), ('delete', '删除'), ('view', '查看'), ('login', '登录'), ('logout', '登出'), ('other', '其他操作')], max_length=10)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '管理员日志',
                'verbose_name_plural': '管理员日志',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('suggestion', '建议'), ('problem', '问题'), ('complaint', '投诉'), ('other', '其他')], max_length=20, verbose_name='反馈类型')),
                ('content', models.TextField(verbose_name='反馈内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='是否已处理')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户反馈',
                'verbose_name_plural': '用户反馈',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_type', models.CharField(choices=[('month', '一个月'), ('quarter', '一个季度'), ('year', '一年')], max_length=10, verbose_name='会员类型')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='开始时间')),
                ('end_date', models.DateTimeField(verbose_name='结束时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '会员',
                'verbose_name_plural': '会员',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_plate', models.CharField(max_length=20, verbose_name='车牌号')),
                ('vehicle_type', models.CharField(choices=[('car', '小型汽车'), ('truck', '货车'), ('ev', '新能源车')], default='car', max_length=20, verbose_name='车辆类型')),
                ('entry_time', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='入场时间')),
                ('exit_time', models.DateTimeField(blank=True, null=True, verbose_name='出场时间')),
                ('paid', models.BooleanField(default=False, verbose_name='是否支付')),
                ('spot_number', models.CharField(blank=True, max_length=10, null=True, verbose_name='车位号')),
                ('reserved', models.BooleanField(default=False, verbose_name='是否被预订')),
                ('reservation_time', models.DateTimeField(blank=True, null=True, verbose_name='预订时间')),
                ('reservation_use_time', models.DateTimeField(blank=True, null=True, verbose_name='预定使用时间')),
                ('reservation_expiry_time', models.DateTimeField(blank=True, null=True, verbose_name='预定过期时间')),
                ('fee', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='费用')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '车辆',
                'verbose_name_plural': '车辆',
            },
        ),
    ]
